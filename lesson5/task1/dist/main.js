!function (t) { var e = {}; function n(s) { if (e[s]) return e[s].exports; var o = e[s] = { i: s, l: !1, exports: {} }; return t[s].call(o.exports, o, o.exports, n), o.l = !0, o.exports } n.m = t, n.c = e, n.d = function (t, e, s) { n.o(t, e) || Object.defineProperty(t, e, { enumerable: !0, get: s }) }, n.r = function (t) { "undefined" != typeof Symbol && Symbol.toStringTag && Object.defineProperty(t, Symbol.toStringTag, { value: "Module" }), Object.defineProperty(t, "__esModule", { value: !0 }) }, n.t = function (t, e) { if (1 & e && (t = n(t)), 8 & e) return t; if (4 & e && "object" == typeof t && t && t.__esModule) return t; var s = Object.create(null); if (n.r(s), Object.defineProperty(s, "default", { enumerable: !0, value: t }), 2 & e && "string" != typeof t) for (var o in t) n.d(s, o, function (e) { return t[e] }.bind(null, o)); return s }, n.n = function (t) { var e = t && t.__esModule ? function () { return t.default } : function () { return t }; return n.d(e, "a", e), e }, n.o = function (t, e) { return Object.prototype.hasOwnProperty.call(t, e) }, n.p = "", n(n.s = 0) }([function (t, e, n) { "use strict"; n.r(e); const s = document.querySelector(".list"); let o = document.querySelector(".task-input"); const a = t => { s.innerHTML = "", o.value = ""; const e = t.sort((t, e) => e.date - t.date).sort((t, e) => t.done - e.done).map(({ text: t, done: e, _id: n }) => { const s = document.createElement("li"); s.classList.add("list__item"), e && s.classList.add("list__item_done"); const o = document.createElement("input"); o.setAttribute("type", "checkbox"), s.setAttribute("data-id", n), o.checked = e, o.classList.add("list__item-checkbox"); const a = document.createElement("button"); return a.classList.add("delete-btn"), s.append(o, t, a), s }); s.append(...e) }, r = "https://crudcrud.com/api/212e290d89b544259b0a389632ed95b2/tasks", i = () => fetch(r).then(t => t.json()); document.querySelector(".create-task-btn").addEventListener("click", (function () { const t = { text: document.querySelector(".task-input").value, done: !1, id: Math.trunc(1e3 * Math.random()), date: new Date }; (e = t, fetch(r, { method: "POST", headers: { "Content-Type": "application/json; charset=utf-8" }, body: JSON.stringify(e) })).then(() => i()).then(t => { localStorage.setItem("tasksList", JSON.stringify(t)), a(t) }); var e })); let c = localStorage.getItem("tasksList") ? JSON.parse(localStorage.getItem("tasksList")) : []; window.addEventListener("storage", (function (t) { "tasksList" == t.key && (c = localStorage.getItem("tasksList") ? JSON.parse(localStorage.getItem("tasksList")) : [], a(c)) })); document.addEventListener("DOMContentLoaded", () => { a(c) }); document.querySelector(".list").addEventListener("click", t => { if (!t.target.classList.contains("list__item-checkbox")) return; const e = (localStorage.getItem("tasksList") ? JSON.parse(localStorage.getItem("tasksList")) : []).find(e => e._id == t.target.closest(".list__item").dataset.id), n = { text: e.text, date: e.date, done: !e.done }; ((t, e) => fetch(`${r}/${t}`, { method: "PUT", headers: { "Content-Type": "application/json; charset=utf-8" }, body: JSON.stringify(e) }))(e._id, n).then(() => i()).then(t => { localStorage.setItem("tasksList", JSON.stringify(t)), a(t) }) }); document.querySelector(".list").addEventListener("click", t => { if (!t.target.classList.contains("delete-btn")) return; (t => fetch(`${r}/${t}`, { method: "DELETE", headers: { "Content-Type": "application/json; charset=utf-8" } }))((localStorage.getItem("tasksList") ? JSON.parse(localStorage.getItem("tasksList")) : []).find(e => e._id == t.target.closest(".list__item").dataset.id)._id).then(() => i()).then(t => { localStorage.setItem("tasksList", JSON.stringify(t)), a(t) }) }) }]);